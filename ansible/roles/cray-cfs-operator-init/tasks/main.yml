#
# MIT License
#
# (C) Copyright 2019, 2021-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
- name: Ensure /root/k8s/cfs directory exists
  file: path=/root/k8s/cfs state=directory
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true

- name: Check for PrivKey
  stat:
    path: "{{ cray_cfs_aee_private_key_path }}"
  register: priv_stat_result
  run_once: true
  changed_when: false
  delegate_to: "{{ groups['bis'][0] }}"

- name: Check for PublicKey
  stat:
    path: "{{ cray_cfs_aee_public_key_path }}"
  register: pub_stat_result
  run_once: true
  changed_when: false
  delegate_to: "{{ groups['bis'][0] }}"

# fail_msg becomes available in Ansible 2.7, so we don't see fail_msg currently
- name: Assert Private Key Exists
  assert:
    that:
      - "{{ item }}.stat.exists"
    fail_msg: "'{{ cray_cfs_aee_private_key_path }}' does not exist; ensure private key information has been generated on {{ groups['bis'][0] }}."
  run_once: true
  delegate_to: "{{ groups['bis'][0] }}"
  with_items:
  - priv_stat_result
  - pub_stat_result

- name: Capture Private Key for AEE Privilages
  shell: "cat {{ cray_cfs_aee_private_key_path }} | base64"
  register: b64_rsa_privkey
  no_log: true
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true
  changed_when: false

- name: Capture Public Key for AEE Image Customization
  shell: "cat {{ cray_cfs_aee_public_key_path }}"
  register: cfs_rsa_pubkey
  no_log: true
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true
  changed_when: false

- name: Create CFS AEE Privkey Secret
  template:
    src: cfs-aee-keys.yaml.j2
    dest: /root/k8s/cfs/cfs-aee-keys.yaml
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true

- name: Apply CFS CRD spec
  command: kubectl apply -f cfs-aee-keys.yaml
  args:
    chdir: /root/k8s/cfs
  delegate_to: "{{ groups['bis'][0] }}"
  run_once: true
